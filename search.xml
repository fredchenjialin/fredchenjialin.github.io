<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Double-Q]]></title>
      <url>http://fredchenjialin.github.io/2016/10/17/Double-Q/</url>
      <content type="html"><![CDATA[<h2 id="这是一篇Double-Q-learning的论文，很关键啊"><a href="#这是一篇Double-Q-learning的论文，很关键啊" class="headerlink" title="这是一篇Double Q-learning的论文，很关键啊"></a>这是一篇Double Q-learning的论文，很关键啊</h2><p>$Q_{t+1}(s_{t},a_{t}) = Q_{t}(s_{t},a_{t})+\alpha_{(s_{t},a_{t})}(r_{t}+\gamma\underset{a}{max}Q_{t}(s_{t+1},a_{t})-Q_{t}(s_{t},a_{t})) （1）$</p>
<p>上式中的 $R_{sa}^{s’}=E\{r_{t}|(s,a,s’)=(s_{t},a_{t},s_{t+1})\}$</p>
<p>$\forall s,a : Q^{星号}(s,a) = \sum_{s’}P_{sa}^{s’}(R_{sa}^{s’}+\gamma\underset{a}{max} Q^{星号}(s’,a)) （2）$</p>
<p>折扣因子 $\gamma \in [0,1)$ 的两点含义，一是立即反馈的权重大，二是可证明在有限的情况下Q学习达到最优。</p>
<p>过度估计的原因：使用max操作去决定下一状态的价值。</p>
<h4 id="下面是见证奇迹的时刻。"><a href="#下面是见证奇迹的时刻。" class="headerlink" title="下面是见证奇迹的时刻。"></a>下面是见证奇迹的时刻。</h4><blockquote>
<p>假定<script type="math/tex">M</script>个随机变量，<script type="math/tex">X=\left \{ X_{1},...,X_{M}, \right \}</script>，有一类问题是关注最大期望<br>$\underset{i}{max}E \{ X_{i}  \} （3）$，<br>但是在函数形式和分布情况不确定的情况下，这个东西没法证明。<br>我们让<script type="math/tex">S=\bigcup_{i=1}^{M}S_{i}</script>，<script type="math/tex">S_{i}</script>中是<script type="math/tex">X_{i}</script>的集合。<script type="math/tex">S_{i}</script>变量之间相互独立且同分布。<br>期望值的无偏估计可以通过计算每一个变量的样本均值求得：<br>$E\{X_{i}\} = E\{\mu_{i}\}\approx \mu _{i}(S)= \frac{1}{|S_{i}|}\sum_{s\in S_{i}}s$，其中<script type="math/tex">\mu_{i}是X_{i}的估计量</script>。<br>每一个样本<script type="math/tex">s\in S_{i}</script>都是<script type="math/tex">E\left \{X_{i}\right \}</script>的无偏估计，所以上式逼近是无偏的。<br>那么近似误差就由估计量的方差构成，并且随样本增多而减小。<br>然后定义一下概率密度函数PDF<script type="math/tex">f_{i}</script>和分布函数CDF<script type="math/tex">F_{i}(x)=\int_{-\infty }^{x}f_{i}(x)dx</script>,那么最大期望即是<script type="math/tex">max_{i}E\left \{ X_{i} \right \}=max_{i}\int_{-\infty }^{+\infty }xf_{i}(x)dx</script></p>
</blockquote>
<h4 id="单一估计量"><a href="#单一估计量" class="headerlink" title="单一估计量"></a>单一估计量</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ROS的坑]]></title>
      <url>http://fredchenjialin.github.io/2016/10/08/ROS%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<h2 id="主要是为了记录踩过的坑"><a href="#主要是为了记录踩过的坑" class="headerlink" title="主要是为了记录踩过的坑"></a>主要是为了记录踩过的坑</h2><p>最近google开源了他的工程性的SLAM算法。所以我就赶紧学一学ROS。</p>
<p>环境是Ubuntu14.04，准备安装Jade。</p>
<ul>
<li><p><a href="http://wiki.ros.org/cn/jade/Installation/Ubuntu" target="_blank" rel="external">初始化rosdep</a></p>
<p>在网上找到了这个<a href="http://answers.ros.org/question/146731/hello-when-i-run-rosdep-update-i-get-timed-out/" target="_blank" rel="external">http://answers.ros.org/question/146731/hello-when-i-run-rosdep-update-i-get-timed-out/</a></p>
<p>这里面的人说了一句:</p>
<blockquote>
<p>I update success after 2-day’s time repeating exacuted ‘rosdep update’.. and finally i don’t even know why it suddenly works.. anyway，thank you a lot～</p>
</blockquote>
<p>我深以为然！！其实我觉得就是不能翻墙的问题。</p>
</li>
<li><p>每次都可以配置好ROS的环境变量</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"source /opt/ros/jade/setup.bash"</span> &gt;&gt; ~/.bashrc </span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
</li>
<li><p>常用命令集合</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rospack find [包名称]</span></span><br><span class="line"><span class="comment"># roscd [本地包名称[/子目录]]  切换至包目录</span></span><br><span class="line"><span class="comment"># rosls [本地包名称[/子目录]]</span></span><br><span class="line"><span class="variable">$ </span>rospack depends1 beginner_tutorials 列出依赖包</span><br><span class="line"><span class="variable">$ </span>roscore 运行一切命令之前的命令</span><br><span class="line"><span class="variable">$ </span>rosnode list 查看都运行了什么</span><br><span class="line"><span class="variable">$ </span>rosnode info /rosout 查看指定程序情况</span><br><span class="line"><span class="variable">$ </span>rosrun 使用包名运行包内节点</span><br><span class="line"><span class="variable">$ </span>rosrun rqt_graph rqt_graph 查看当前节点之间的通信话题</span><br><span class="line"><span class="variable">$ </span>rostopic -h</span><br></pre></td></tr></table></figure>
</li>
<li></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[goodbye，Nexus！]]></title>
      <url>http://fredchenjialin.github.io/2016/10/05/goodbye%EF%BC%8CNexus%EF%BC%81/</url>
      <content type="html"><![CDATA[<h3 id="再见了，Nexus！！！"><a href="#再见了，Nexus！！！" class="headerlink" title="再见了，Nexus！！！"></a>再见了，Nexus！！！</h3><p>上了大学的第一天，同寝室的人问我，你是多少学号，我说不知道唉！他说你没有查一查吗，我说不知道在哪里查这种信息。<br>他说网上就有通知啊。</p>
<p>于是我拿出我的第一款手机，oppo，查来查去，浏览器进不去，室友说，来，我帮你看看。</p>
<p>他掏出了一台手机，一台我觉得在那个时候超级好看，高端，充满了未来感，又和平时见到的手机完全不一样的手机。后来我知道它叫做Nexus。</p>
<p>室友的Nexus是三星代工的第三代，也是多代Nexus中品控上乘的一代，Nexus S深深的影响到了我对于手机的审美。</p>
<p>我的第一台Nexus是LG代工的第四代，购买的时候已经是发售后将近一年了，在淘宝上面买的。N4是双面玻璃背板，正面是一整块玻璃，背面是玻璃下有一层科技花纹，非常亮眼。</p>
<p>我的N4在使用期间一共摔过三次，两次都摔碎了屏幕，可见我的小心和双面玻璃的脆弱。第一次摔碎时，从淘宝上买来屏幕总成自己对着换屏视频换了屏幕，新屏幕完美使用。后来屏幕又摔碎了一次，因为成本问题，就放弃了。</p>
<p>N4摔坏了以后因为经济问题，换了小米的红米手机，除了稍显卡顿，并没有什么不满，原因是当时我买了ipad，有得玩。</p>
<p>这期间，Nexus发布了5（LG），6（MOTO），塑料背壳，我感到很辛运是在N4的时候我可以有钱买到它。</p>
<p>大四的时候，因为错误的判断以及信仰，在N5X（LG）发布一个月后自己海淘购买了5X，虽然相当于是借钱买的，但是我并不后悔，这确实是最后一代的Nexus了。<br>对了，和N5X同时发布的同时也发了一个高端型号，Nexus6P（华为）。</p>
<p>今天凌晨，google开发布会公布了从“mobile first”到“AI first”的转变，同时发布了由HTC代工的新一代google手机，pixel和pixel XL。</p>
<p>所以，Nexus，再见了。</p>
<p>个人认为最好看的N4和最后收官的N5X，满足了，哈！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[论文结构学习一]]></title>
      <url>http://fredchenjialin.github.io/2016/09/22/%E8%AE%BA%E6%96%87%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%B8%80/</url>
      <content type="html"><![CDATA[<p>本篇学习目标是《<a href="http://128.84.21.199/abs/1609.05143v1" target="_blank" rel="external">Target-driven Visual Navigation in Indoor Scenes using Deep Reinforcement Learning</a>》</p>
<h2 id="关于Introduction"><a href="#关于Introduction" class="headerlink" title="关于Introduction"></a>关于Introduction</h2><h4 id="介绍背景和做了哪些东西，现有的不足以及我们实现的效果-如下："><a href="#介绍背景和做了哪些东西，现有的不足以及我们实现的效果-如下：" class="headerlink" title="介绍背景和做了哪些东西，现有的不足以及我们实现的效果,如下："></a>介绍背景和做了哪些东西，现有的不足以及我们实现的效果,如下：</h4><blockquote>
<p>Since the 1970s, there have been various attempts to build a system that can understand such relationships. Recently, with the rise of deep learning models, learning-based approaches have gained wide popularity [1], [2].</p>
</blockquote>
<p>说到了一部分的背景。</p>
<blockquote>
<p>In order to achieve higher adaptability and flexibility, we introduce a target-driven model.</p>
</blockquote>
<p>说到了具体的工作。</p>
<blockquote>
<p>Unfortunately, training and quantitatively evaluating DRL algorithms in real environments is often tedious.</p>
</blockquote>
<p>不足。</p>
<blockquote>
<p>We evaluate our method for the following tasks: (1) Target generalization, where the goal is to navigate to targets that have not been used during training within a scene. (2) Scene generalization, where the goal is to navigate to targets in scenes not used for training. (3) Real-world generalization, where we demonstrate navigation to targets using a real robot. </p>
</blockquote>
<p>目标。</p>
<blockquote>
<p>In summary, …</p>
</blockquote>
<p>总结。</p>
<h2 id="关于RELATED-WORK"><a href="#关于RELATED-WORK" class="headerlink" title="关于RELATED WORK"></a>关于RELATED WORK</h2><p>相关工作介绍了很多已有的技术和方法。给予地图的方法需要地图，然后说说我们的方法不用地图。对于无地图的导航，关注点基本都在给定输入图像的避障，我们侧重在无图，也不基于3D重建。</p>
<p>接着说到了强化学习，说到了直升机的那个，还有DRL的开山之作，玩Atari游戏，我们的输入更复杂，而且可以迁移知识。</p>
<h2 id="接下来介绍了实验平台，也就是实验需要的环境，相当于介绍实验背景"><a href="#接下来介绍了实验平台，也就是实验需要的环境，相当于介绍实验背景" class="headerlink" title="接下来介绍了实验平台，也就是实验需要的环境，相当于介绍实验背景"></a>接下来介绍了实验平台，也就是实验需要的环境，相当于介绍实验背景</h2><p>仿真系统的好处就是可伸缩性scalable</p>
<blockquote>
<p>The advantage of using a physics engine for modeling the world is that it is highly scalable (training a robot in real houses is not easily scalable).</p>
</blockquote>
<h2 id="说到了目标导向的模型以及用于模型的框架deep-siamese-actor-critic-network"><a href="#说到了目标导向的模型以及用于模型的框架deep-siamese-actor-critic-network" class="headerlink" title="说到了目标导向的模型以及用于模型的框架deep siamese actor-critic network"></a>说到了目标导向的模型以及用于模型的框架deep siamese actor-critic network</h2><ul>
<li>A先说是问题状态，这里是分析场景以及确定模型的作用：学习从2d图像到三维场景动作的映射。</li>
<li>B是问题设想。关于泛化能力的分析，对于新目标不需要重新训练的补充。</li>
<li>C是学习的设置。关键点在模型。</li>
<li>D是模型。他们的模型嵌入了一个什么的层，这种模型使得场景共用一个层，目标共用一个层。<strong>不懂</strong></li>
<li>E是训练的方法。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于虚拟机Ubuntu安装Tensorflow]]></title>
      <url>http://fredchenjialin.github.io/2016/09/14/%E5%85%B3%E4%BA%8E%E8%99%9A%E6%8B%9F%E6%9C%BAUbuntu%E5%AE%89%E8%A3%85Tensorflow/</url>
      <content type="html"><![CDATA[<h3 id="今天的安装非常顺利，没有遇到奇奇怪怪的问题，因为写DQN需要Tensorflow这个库，所以在我的虚拟机内安装一下。"><a href="#今天的安装非常顺利，没有遇到奇奇怪怪的问题，因为写DQN需要Tensorflow这个库，所以在我的虚拟机内安装一下。" class="headerlink" title="今天的安装非常顺利，没有遇到奇奇怪怪的问题，因为写DQN需要Tensorflow这个库，所以在我的虚拟机内安装一下。"></a>今天的安装非常顺利，没有遇到奇奇怪怪的问题，因为写DQN需要Tensorflow这个库，所以在我的虚拟机内安装一下。</h3><p><a href="http://www.cnblogs.com/lanxuezaipiao/p/3613497.html" target="_blank" rel="external">http://www.cnblogs.com/lanxuezaipiao/p/3613497.html</a>这个教程非常的好。</p>
<p>固定ip后，在tensorflow官网查看安装命令，使用pip安装</p>
<p>连接到我本机的代理后，可以正常下载</p>
<p>$ sudo pip install —proxy=<a href="http://yourproxy:yourport" target="_blank" rel="external">http://yourproxy:yourport</a> package_name</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo下使用mathjax的相关问题]]></title>
      <url>http://fredchenjialin.github.io/2016/09/13/hexo%E4%B8%8B%E4%BD%BF%E7%94%A8mathjax%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>在blog中插入公式，mathjax是一个十分好用的工具。</p>
<p>以往都是直接在hexo的主题的某个模块上直接修改代码，现在只需要安装一个hexo-math就可以自动使用。</p>
<p><a href="https://github.com/akfish/hexo-math" target="_blank" rel="external">hexo-math的github</a><br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-<span class="built_in">math</span> <span class="comment">--save</span></span><br><span class="line">$ hexo <span class="built_in">math</span> install</span><br><span class="line"></span><br><span class="line">在_config.yml中添加</span><br><span class="line">plugins: hexo-<span class="built_in">math</span></span><br></pre></td></tr></table></figure></p>
<p>使用中，内联是一个‘$’符号，一行是两个。</p>
<h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ul>
<li>我从<a href="https://www.codecogs.com/latex/eqneditor.php?lang=zh-cn" target="_blank" rel="external">这里</a>复制公式源码到vs code里面，总是发现会有斜体出现，原来以为是vs code里面的代码显示的bug，后来明白过来估计是，复制的时候把斜体的形式也复制了过来。<ul>
<li>PS:问题找到了，是下标在mathjax渲染后变成了某个html标签，导致了公式显示失效</li>
<li>解决方法是：在_之前添加\，一切ok。</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[策略梯度]]></title>
      <url>http://fredchenjialin.github.io/2016/09/12/%E7%AD%96%E7%95%A5%E6%A2%AF%E5%BA%A6/</url>
      <content type="html"><![CDATA[<h2 id="策略梯度"><a href="#策略梯度" class="headerlink" title="策略梯度"></a>策略梯度</h2><p>策略梯度以一种不同的方式给出了衰减期望的目标函数。</p>
<script type="math/tex; mode=display">L(\theta )=E(r\_{1} +\gamma r\_{2} + \gamma^{2} r\_{3}+…|\pi (,\theta))</script><p>构造损失函数</p>
<script type="math/tex; mode=display">L(\theta )=\sum log\pi(a|s,\theta)f(s,a)</script><p>损失函数推导：</p>
<script type="math/tex; mode=display">\bigtriangledown\_{\theta}E\_{x}\left [ f(x) \right ] =\bigtriangledown\_{\theta}\sum\_{x}^{ } p(x)f(x)\\\\
=\sum\_{x}^{ }\bigtriangledown\_{\theta}p(x)f(x)\\\\
=\sum\_{x}^{ }p(x)\frac{\bigtriangledown\_{\theta}p(x)}{p(x)}f(x)\\\\
=\sum\_{x}^{ }p(x)\bigtriangledown\_{\theta}logp(x)f(x)\\\\
=E\_{x}[f(x)\bigtriangledown\_{\theta}logp(x)]</script>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[研究生生活（零）]]></title>
      <url>http://fredchenjialin.github.io/2016/09/05/%E7%A0%94%E7%A9%B6%E7%94%9F%E7%94%9F%E6%B4%BB%EF%BC%88%E9%9B%B6%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>研究生生活这个目录呢，记录研究生期间都在做些什么，生活的状态和一些对于研究生的反思。</p>
<p>每一篇都以一段时间的状态来开展，希望能够记录下自己的两年半的时光。</p>
<p><strong>对于，换电脑写blog的反思：</strong></p>
<p>software：hexo（nodejs）</p>
<p>git：Gitkraken</p>
<p>配置文件以及主题：git上传或者云盘吧</p>
<hr>
<h2 id="零-开学"><a href="#零-开学" class="headerlink" title="零 开学"></a>零 开学</h2><p>8.25号研究生报道开学，一直到9.5才要开始正式上课，期间忙了些开学的事，忙了些教研室的事，但是在论文上一直都没有什么进展。</p>
<p>今天5号了，我这一阶段的任务是把我的毕设论文改进成一篇要发表的论文。毕设是比较low的东西，发表视水平而定是一件比较难的事情。</p>
<p>难点是，</p>
<p>一是在RL方向上，13年的时候与DL进行结合导致，DQN在DeepMind团队的手中大火了起来，到了AlphaGo的时候达到了顶峰。<br>因此，问题在于，在这些方法的改进上这些人以及跟风的人提出了很多各种各样的方法，不仅多而且高端。</p>
<p>二是如果想要达到理想的效果，实验不好跑，甚至是跑不出来，o(╯□╰)o。</p>
<ol>
<li>梳理本科论文</li>
<li>梳理Atari那篇</li>
</ol>
<p>这个目录是研究生生活，所以本章是零，接下来到下一个状态的都是只有研究生生活这个Categories，没有大标题，这样的效果是，在这个Categories中，直接就是以大标题做了分割。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[东搞西搞是没有出路的]]></title>
      <url>http://fredchenjialin.github.io/2016/09/04/%E4%B8%9C%E6%90%9E%E8%A5%BF%E6%90%9E%E6%98%AF%E6%B2%A1%E6%9C%89%E5%87%BA%E8%B7%AF%E7%9A%84/</url>
      <content type="html"><![CDATA[<p>最近开了学后一直在实验室待着，但是进展却一直没有头绪，总结一下就是要做事情的话，<br>还是需要专注和专心。我最近又在东搞西搞了，看了几篇用RL避障的论文，又看了下RL里面Q的细节（这个<br>细节还是有很多东西搞不清楚的），看了下为什么DQN为什么用的多，而且火。就看了这些，除此之外的时间<br>都用来看视频，睡觉和刷网页了。</p>
<p>需要静静心，把我的研究生第一个阶段的任务给完成了，在此，我觉得搞一个像是那种进度表一样的东西会比较有趣，<br>也能够记录下研究生期间我都干了什么。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu下配置OpenAI]]></title>
      <url>http://fredchenjialin.github.io/2016/09/04/ubuntu%E4%B8%8B%E9%85%8D%E7%BD%AEOpenAI/</url>
      <content type="html"><![CDATA[<p>研究生开学了，我也再次回到了写生活日记的时期，我觉得以前把现在这种叫做技术日记真是让自己觉得不好意思，<br>且当做生活日记吧。</p>
<p>开了学也没干啥，配了个环境OpenAI，关键在于在ubuntu下安装numpy和scipy这两个科学计算库。</p>
<p>numpy还好，scipy还需要两个线性代数的库，十分麻烦。</p>
<p>因为OpenAI需要指定0.17.1的版本，所以需要下载源码安装。</p>
<p>OpenAI主站：<a href="https://gym.openai.com" target="_blank" rel="external">https://gym.openai.com</a></p>
<p>安装scipy：<a href="http://stackoverflow.com/questions/7496547/does-python-scipy-need-blas" target="_blank" rel="external">http://stackoverflow.com/questions/7496547/does-python-scipy-need-blas</a></p>
<p>scipy的github：<a href="https://github.com/scipy/scipy/blob/master/INSTALL.rst.txt#linux" target="_blank" rel="external">https://github.com/scipy/scipy/blob/master/INSTALL.rst.txt#linux</a></p>
<p>md，锐捷流量用的太快。。。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[对自己说]]></title>
      <url>http://fredchenjialin.github.io/2016/04/16/%E5%AF%B9%E8%87%AA%E5%B7%B1%E8%AF%B4/</url>
      <content type="html"><![CDATA[<h1 id="Question-set"><a href="#Question-set" class="headerlink" title="Question set"></a>Question set</h1><h3 id="Q1-学长在大学期间有哪些成就（成绩，竞赛等等）？-人物简介"><a href="#Q1-学长在大学期间有哪些成就（成绩，竞赛等等）？-人物简介" class="headerlink" title="Q1:学长在大学期间有哪些成就（成绩，竞赛等等）？  //人物简介"></a>Q1:学长在大学期间有哪些成就（成绩，竞赛等等）？  //人物简介</h3><h3 id="A："><a href="#A：" class="headerlink" title="A："></a>A：</h3><p><em>
</em><br><em>
</em></p>
<h3 id="Q2-对于期末考试学长是怎么看待的？一般是如何备考的？"><a href="#Q2-对于期末考试学长是怎么看待的？一般是如何备考的？" class="headerlink" title="Q2:对于期末考试学长是怎么看待的？一般是如何备考的？"></a>Q2:对于期末考试学长是怎么看待的？一般是如何备考的？</h3><h3 id="A：-1"><a href="#A：-1" class="headerlink" title="A："></a>A：</h3><ul>
<li>期末考试怎么看其实是这门课怎么看的问题？</li>
<li><p>相当于课程分类，按重要程度：</p>
<ol>
<li>数学课+专业基础课（这些课的学分通常很高）</li>
<li><ul>
<li>上面一类课的进阶（通常就是难度加强版，不过这一类课软件工程专业几乎没有，所以就把面向对象等比较偏方向的课算在里面吧）</li>
<li>实验课（实验课因为在我们学校，或者说是国内比较水，所以放在第二等，对比国外cs的top高校，基本就是基础加上实验的教学，实验就是万分重要了）</li>
<li>英语（这个是看不见的重要，但是对于要出国的同学，这个是最最最重要的）</li>
</ul>
</li>
<li>凑学分的课</li>
<li>不构成学分的课</li>
</ol>
</li>
<li><p>定义 </p>
<pre><code>  突击：在周围进入期末备战期间才开始正规的看书刷题的行为。（并不严谨，不一而论）
</code></pre></li>
<li><p>针对1和2中的进阶课程，例如几门数学课，专业课等</p>
<pre><code>  如果不是突击型的学霸，就要在平时好好上课，看书，然后刷题。
</code></pre><ul>
<li>本人只要没好好的听课，这门课的分数肯定80以下。（例如，高数2，线代，组成原理，汇编等）</li>
<li>经过我的观察，突击型学霸可以在刷题时获得洞察buff，即什么重点，难点，易考点了如指掌</li>
<li>不过只有成功的考出高分才是突击型学霸，这里面包括实力，智力，运气等各种因素很复杂</li>
<li>最后，好好听课，做好笔记，写作业，答疑</li>
</ul>
</li>
<li><p>针对2中实验课</p>
<ul>
<li>好好写代码，好好完成自己的那个部分，就算是抄，也要手动打，别复制。。。</li>
</ul>
</li>
<li><p>针对2中英语</p>
<ul>
<li>很重要，我也学不好，没有任何经验，无力。六级431。。。</li>
</ul>
</li>
<li><p>针对3</p>
<ul>
<li>有些课是你即使认真听了，到了期末和大家一起背题，分数和只背了题的也差不多，但不一定是高分</li>
<li>确实有些人可以考出高分，我不能，我也不知道窍门，可能是因为没认真听课</li>
<li>但是凑学分的课有些学分也是蛮高的</li>
<li>这些课很神奇，你的努力会有收获，但不一定是从分数上，例如形势与政策</li>
</ul>
</li>
<li><p>针对4</p>
<ul>
<li>例如体育课，没什么好说的</li>
<li>我认为我上的篮球课很好，很有收获，比很多有学分的课都有收获，关键是老师好</li>
</ul>
</li>
<li><p>最后，为了分数！！！</p>
<ul>
<li>如果是为了分数，你会发现有一些可以让你迅速拉开距离的东西，像是英语考高分</li>
<li>。。。。。。</li>
</ul>
</li>
<li><p>如何备考？</p>
<ul>
<li>从以上分类的态度就能看出来了！！！</li>
</ul>
</li>
</ul>
<h3 id="Q3：学长成绩优异，能否和学弟学妹们分享分享学习心得？"><a href="#Q3：学长成绩优异，能否和学弟学妹们分享分享学习心得？" class="headerlink" title="Q3：学长成绩优异，能否和学弟学妹们分享分享学习心得？"></a>Q3：学长成绩优异，能否和学弟学妹们分享分享学习心得？</h3><h3 id="A：-2"><a href="#A：-2" class="headerlink" title="A："></a>A：</h3><h4 id="成绩不优异。心得就是学习认真点，对分数要有追求，但不要本末倒置"><a href="#成绩不优异。心得就是学习认真点，对分数要有追求，但不要本末倒置" class="headerlink" title="成绩不优异。心得就是学习认真点，对分数要有追求，但不要本末倒置"></a>成绩不优异。心得就是学习认真点，对分数要有追求，但不要本末倒置</h4><h3 id="Q4：学长能否就自己的学习方向，和后辈们谈谈该方向的职业和就业前景？"><a href="#Q4：学长能否就自己的学习方向，和后辈们谈谈该方向的职业和就业前景？" class="headerlink" title="Q4：学长能否就自己的学习方向，和后辈们谈谈该方向的职业和就业前景？"></a>Q4：学长能否就自己的学习方向，和后辈们谈谈该方向的职业和就业前景？</h3><h3 id="A：-3"><a href="#A：-3" class="headerlink" title="A："></a>A：</h3><ul>
<li>本专业的俗称是码农（我对于这个词没有任何的色彩和过分解读），找工作和本科薪资在各个专业里面算是比较靠前的</li>
<li>算是『服务』行业，是服务于各个行业的行业。说的夸张点，和数学类似，可以发现学数学的可以转到任何专业都不怂，而学计算机的是各个行业都需要，共性是金字塔一样的结构，顶尖的只有一小撮</li>
<li>关于就业，很广泛，说不好，有兴趣的可以关注软件行业的『青春饭』或常说的互联网泡沫等问题。</li>
</ul>
<h3 id="Q5-请问学长在实习中如何处理实际问题和所学知识理论的差异？实习有需要注意哪些问题？"><a href="#Q5-请问学长在实习中如何处理实际问题和所学知识理论的差异？实习有需要注意哪些问题？" class="headerlink" title="Q5:请问学长在实习中如何处理实际问题和所学知识理论的差异？实习有需要注意哪些问题？"></a>Q5:请问学长在实习中如何处理实际问题和所学知识理论的差异？实习有需要注意哪些问题？</h3><h3 id="A：-4"><a href="#A：-4" class="headerlink" title="A："></a>A：</h3><ul>
<li>我们学的东西在实习的时候发现没有用的原因我猜测为以下几点<ul>
<li>学的不深入或者说没有学到如何进行深入的学习</li>
<li>本来就不是一个领域的东西</li>
<li>你让一个在学校做了很多安卓开发的去做了windows开发，没有兴趣</li>
<li>最重要的一点，有些东西确实学校不教，只能在工作中学到。</li>
</ul>
</li>
<li>注意问题：<ul>
<li>找自己感兴趣的方向</li>
<li>自己的实力越强，找到的实习越好</li>
<li>实习就是去找问题的，不要怕遇到问题，要注意区分是什么层面的问题</li>
</ul>
</li>
</ul>
<h3 id="Q6：学长认为在大学生活中应当如何锻炼自己，去面对以后的社会？对于后辈们有没有什么寄语？"><a href="#Q6：学长认为在大学生活中应当如何锻炼自己，去面对以后的社会？对于后辈们有没有什么寄语？" class="headerlink" title="Q6：学长认为在大学生活中应当如何锻炼自己，去面对以后的社会？对于后辈们有没有什么寄语？"></a>Q6：学长认为在大学生活中应当如何锻炼自己，去面对以后的社会？对于后辈们有没有什么寄语？</h3><h3 id="A：-5"><a href="#A：-5" class="headerlink" title="A："></a>A：</h3><ul>
<li>我从小向大说：<ul>
<li>好好学习，努力高分，在中国高校，学分积很重要</li>
<li>针对本专业，就是好好写代码，实践很重要</li>
<li>学会如何学习，如何深入学习很重要</li>
<li>学会与人相处，保持身体健康</li>
<li>学会做人</li>
</ul>
</li>
</ul>
<h4 id="没什么寄语，希望看到这个问答的筒子们，你们试着回答一下这些问题，记录下来，对大学生活有帮助！！"><a href="#没什么寄语，希望看到这个问答的筒子们，你们试着回答一下这些问题，记录下来，对大学生活有帮助！！" class="headerlink" title="没什么寄语，希望看到这个问答的筒子们，你们试着回答一下这些问题，记录下来，对大学生活有帮助！！"></a>没什么寄语，希望看到这个问答的筒子们，你们试着回答一下这些问题，记录下来，对大学生活有帮助！！</h4><h1 id="以上为原文，最后一句也是写给自己！"><a href="#以上为原文，最后一句也是写给自己！" class="headerlink" title="以上为原文，最后一句也是写给自己！"></a>以上为原文，最后一句也是写给自己！</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一些数学公式]]></title>
      <url>http://fredchenjialin.github.io/2016/04/11/%E4%B8%80%E4%BA%9B%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h1 id="记录一些数学公式，准备用mathjax来画"><a href="#记录一些数学公式，准备用mathjax来画" class="headerlink" title="记录一些数学公式，准备用mathjax来画"></a>记录一些数学公式，准备用mathjax来画</h1><h4 id="拉格朗日方程（Lagrange-equation）"><a href="#拉格朗日方程（Lagrange-equation）" class="headerlink" title="拉格朗日方程（Lagrange equation）"></a>拉格朗日方程（Lagrange equation）</h4><script type="math/tex; mode=display">\frac{d}{dt}\frac{\partial L}{\partial \dot{q}}-\frac{\partial L}{\partial q}=0</script><p>$ L\left ( q, \dot{q}, t \right )$是拉格朗日量，</p>
<p>$q=\left (q_{1}, q_{2}, q_{3},… , q_{N} \right )$是广义坐标，是时间t的函数，</p>
<p>$ \dot{q}=\left (\dot{q_{1}}, \dot{q_{2}}, \dot{q_{3}},… , \dot{q_{N}} \right )$是广义速度。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[default-Software]]></title>
      <url>http://fredchenjialin.github.io/2016/04/11/default-Software/</url>
      <content type="html"><![CDATA[<h1 id="记录一下一些常用默认软件"><a href="#记录一下一些常用默认软件" class="headerlink" title="记录一下一些常用默认软件"></a>记录一下一些常用默认软件</h1><h4 id="论文-Mendeley"><a href="#论文-Mendeley" class="headerlink" title="论文 Mendeley"></a>论文 Mendeley</h4><h4 id="pdf-SumatraPDF"><a href="#pdf-SumatraPDF" class="headerlink" title="pdf SumatraPDF"></a>pdf SumatraPDF</h4><h4 id="编辑器-VScode"><a href="#编辑器-VScode" class="headerlink" title="编辑器 VScode"></a>编辑器 VScode</h4><h4 id="快速编辑器-Notepad"><a href="#快速编辑器-Notepad" class="headerlink" title="快速编辑器 Notepad++"></a>快速编辑器 Notepad++</h4><h4 id="字体美化-MacType"><a href="#字体美化-MacType" class="headerlink" title="字体美化 MacType"></a>字体美化 MacType</h4><h4 id="远程连接-TeamViewer"><a href="#远程连接-TeamViewer" class="headerlink" title="远程连接 TeamViewer"></a>远程连接 TeamViewer</h4><h4 id="Latex-Texmaker-CTex"><a href="#Latex-Texmaker-CTex" class="headerlink" title="Latex Texmaker+CTex"></a>Latex Texmaker+CTex</h4><h4 id="本地服务器集成-XAMPP"><a href="#本地服务器集成-XAMPP" class="headerlink" title="本地服务器集成 XAMPP"></a>本地服务器集成 XAMPP</h4><h4 id="视频播放-potplayer"><a href="#视频播放-potplayer" class="headerlink" title="视频播放 potplayer"></a>视频播放 potplayer</h4><h4 id="IDE-最著名的那一家Jetbrain"><a href="#IDE-最著名的那一家Jetbrain" class="headerlink" title="IDE 最著名的那一家Jetbrain"></a>IDE 最著名的那一家Jetbrain</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mysql小记]]></title>
      <url>http://fredchenjialin.github.io/2015/12/29/mysql%E5%B0%8F%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h2 id="随便记录几条mysql命令，我用的是xmapp中的mysql，炒鸡好用"><a href="#随便记录几条mysql命令，我用的是xmapp中的mysql，炒鸡好用" class="headerlink" title="随便记录几条mysql命令，我用的是xmapp中的mysql，炒鸡好用"></a>随便记录几条mysql命令，我用的是xmapp中的mysql，炒鸡好用</h2><h3 id="关于登陆"><a href="#关于登陆" class="headerlink" title="关于登陆"></a>关于登陆</h3><ul>
<li><p>查询当前用户</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select user();</span><br><span class="line">或者</span><br><span class="line">status;</span><br></pre></td></tr></table></figure>
</li>
<li><p>一般默认没有密码直接登录</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加密码</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user <span class="built_in">set</span> password=PASSWORD(<span class="string">'123456'</span>) <span class="built_in">where</span> User=<span class="string">'root'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">// 无法查看当前已登录用户的密码</span><br></pre></td></tr></table></figure>
</li>
<li><p>杂记</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe -skip-grant-tables &amp; // 不检查权限启动</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[消失的爱人]]></title>
      <url>http://fredchenjialin.github.io/2015/12/06/%E6%B6%88%E5%A4%B1%E7%9A%84%E7%88%B1%E4%BA%BA/</url>
      <content type="html"><![CDATA[<p>今天认真看了一遍《消失的爱人》。</p>
<h2 id="表现的是婚姻问题"><a href="#表现的是婚姻问题" class="headerlink" title="表现的是婚姻问题"></a>表现的是婚姻问题</h2><ul>
<li>用一种悬疑，刺激的剧情来表现婚姻问题，感觉仅仅是换了一个角度，或者是套了一个新的壳子，让我们看大千世界里面的人有不一样的形态。</li>
<li>女主看似很聪明，男主看似很蠢顿，但是感觉总是没有出错的，只是这俩人走到了一起，发生了这样的故事。</li>
<li>还是婚姻问题。</li>
</ul>
<h2 id="关于电影拍摄"><a href="#关于电影拍摄" class="headerlink" title="关于电影拍摄"></a>关于电影拍摄</h2><ol>
<li>妹妹这一角色的设定是龙凤胎，以及我们常常忘了这一角色去困惑为什么妹妹比哥哥还要激动和委屈，尤其是在最后知道了女主怀孕后，妹妹的伤心类似悲痛欲绝。<br>这是男主的理想和显示的两种写照吧。</li>
<li>关于女主对男主的陷害手段，称的上是神乎其神，电影中面对众多目光的反应和面对丈夫的坦然，很厉害。但是这也仅仅是在双方斗争手段中的一个演绎。</li>
<li>电影设计的这些东西看似很聪明绝伦，但是可能现实更加真实。</li>
</ol>
<h2 id="电影里的人物"><a href="#电影里的人物" class="headerlink" title="电影里的人物"></a>电影里的人物</h2><ol>
<li>男主撩妹技能满分</li>
<li>女主真煞费苦心</li>
<li>这一对也是有点合适</li>
<li>妹妹的角色设定很好</li>
<li>记者神烦</li>
<li>女警好评</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习8]]></title>
      <url>http://fredchenjialin.github.io/2015/11/28/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A08/</url>
      <content type="html"><![CDATA[<h3 id="最近一直在学机器学习，但是没有更新blog原因"><a href="#最近一直在学机器学习，但是没有更新blog原因" class="headerlink" title="最近一直在学机器学习，但是没有更新blog原因"></a>最近一直在学机器学习，但是没有更新blog原因</h3><ul>
<li>有一个好朋友，介绍了一个新词给我，叫做手账。</li>
<li>本不理解这个是什么东西，去查了查，发现是一种记东西的本子，可以记录各种自己想要记录的东西，日记，计划，学习笔记等等。</li>
<li>这个东西我认得，我在高中的时候有个很小的本子，就是什么都记在上面（除了大型学习笔记）</li>
<li>为什么以前不用了呢，因为我的字迹，排版还有书写真的是太丑了，丑到我拿起我的笔记就想着算了吧，真是丑。。。</li>
<li>不过，我这两天学习时是直接在本子上记的笔记，很有效，也很快速，感觉好上很多。</li>
<li>问题：<ul>
<li>字迹不好看</li>
<li>多了的话没法存储</li>
<li>多了的话没法快速处理</li>
<li>没法自动分类</li>
<li>要是记录多种东西，就很乱。。</li>
</ul>
</li>
<li>以后的笔记都是在纸上的，不行的话就拍了照片放在网上好了。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习7]]></title>
      <url>http://fredchenjialin.github.io/2015/11/19/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A07/</url>
      <content type="html"><![CDATA[<h3 id="支持向量机-SVM-SupportVectorMachine"><a href="#支持向量机-SVM-SupportVectorMachine" class="headerlink" title="支持向量机 SVM SupportVectorMachine"></a>支持向量机 SVM SupportVectorMachine</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JS补记]]></title>
      <url>http://fredchenjialin.github.io/2015/11/16/JS%E8%A1%A5%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="两种实现继承的方式"><a href="#两种实现继承的方式" class="headerlink" title="两种实现继承的方式"></a>两种实现继承的方式</h3><ol>
<li> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">Car</span></span>() &#123;</span><br><span class="line">var self = this;</span><br><span class="line">self.type = <span class="string">"Car"</span></span><br><span class="line">self.go = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">"Going..."</span>);</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">Toyota = <span class="function"><span class="title">function</span></span>() &#123;&#125;;</span><br><span class="line">Toyota.prototype = new Car();</span><br><span class="line">Toyota.prototype.constructor = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">var self = this;</span><br><span class="line">self.type = <span class="string">"Toyota"</span>;</span><br><span class="line">self.go = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">"A Toyota car is going..."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Toyota.prototype.isJapaneseCar = <span class="literal">true</span>;</span><br><span class="line">var t = new Toyota();</span><br><span class="line">console.log(t instanceof Toyota);</span><br><span class="line">console.log(t instanceof Car);</span><br></pre></td></tr></table></figure>
</li>
<li> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var Car = Class.create(&#123;</span><br><span class="line">initialize: <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">this.type = <span class="string">"Car"</span>;</span><br><span class="line">&#125;,</span><br><span class="line">go: <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">"Going..."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">var Toyota = Class.create(Car, &#123;</span><br><span class="line">initialize: <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">this.type = <span class="string">"Toyota"</span>;</span><br><span class="line">this.isJapaneseCar = <span class="literal">true</span>;</span><br><span class="line">&#125;,</span><br><span class="line">go: <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">"A Toyota car is going..."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li>关于父类调用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var Toyota = Class.create(Car, &#123;</span><br><span class="line">initialize: <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">this.type = <span class="string">"Toyota"</span>;</span><br><span class="line">this.isJapaneseCar = <span class="literal">true</span>;</span><br><span class="line">&#125;,</span><br><span class="line">go: <span class="keyword">function</span>(<span class="variable">$super</span>) &#123;</span><br><span class="line"><span class="variable">$super</span>();</span><br><span class="line">console.log(<span class="string">"A Toyota car is going..."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><h3 id="链表实现"><a href="#链表实现" class="headerlink" title="链表实现"></a>链表实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">var Node = Class.create(&#123;</span><br><span class="line">initialize: <span class="keyword">function</span> (val) &#123;</span><br><span class="line">this.value = val;</span><br><span class="line">this.next = null;</span><br><span class="line">&#125;,</span><br><span class="line">addChild: <span class="keyword">function</span>(node) &#123;</span><br><span class="line">this.next = node;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">var LinkedList = Class.create(&#123;</span><br><span class="line">initialize: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">this.root = new Node(null);</span><br><span class="line">this.size = <span class="number">0</span>;</span><br><span class="line">&#125;,</span><br><span class="line">add: <span class="keyword">function</span> (object) &#123;</span><br><span class="line">obj = this.root</span><br><span class="line"><span class="keyword">while</span> (obj.next!= null) &#123;</span><br><span class="line">obj = obj.next;</span><br><span class="line">&#125;</span><br><span class="line">obj.next = new Node(object)</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习6]]></title>
      <url>http://fredchenjialin.github.io/2015/11/12/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A06/</url>
      <content type="html"><![CDATA[<h3 id="评估一个机器学习算法"><a href="#评估一个机器学习算法" class="headerlink" title="评估一个机器学习算法"></a>评估一个机器学习算法</h3><ol>
<li>因为我们在提出一个机器学习算法后总是想着要改进和优化它，使其得到最好的学习效果</li>
<li>通常我们回想可不可以给我们更多的学习数据</li>
<li>但是如果我们有一套科学的评估和诊断的方法，那么对于机器学习是非常有利的</li>
</ol>
<h3 id="过拟合检验-TrainingSet-and-TestSet"><a href="#过拟合检验-TrainingSet-and-TestSet" class="headerlink" title="过拟合检验 TrainingSet and TestSet"></a>过拟合检验 TrainingSet and TestSet</h3><ol>
<li>比例是7：3</li>
</ol>
<h3 id="high-bias-and-high-variance-TrainingSet，CrossValidateSet-and-TestSet"><a href="#high-bias-and-high-variance-TrainingSet，CrossValidateSet-and-TestSet" class="headerlink" title="high bias and high variance TrainingSet，CrossValidateSet and TestSet"></a>high bias and high variance TrainingSet，CrossValidateSet and TestSet</h3><ol>
<li>比例是3：2：2</li>
</ol>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml6/cvandtest.png" alt="costfunction"></p>
<ol>
<li>相对于high bias 和 high variance，其实是更加相当于underfit 和 overfit</li>
</ol>
<p>不行了，那种没学到东西的感觉越来越强烈了</p>
<h2 id="卧槽，证书没了"><a href="#卧槽，证书没了" class="headerlink" title="卧槽，证书没了"></a>卧槽，证书没了</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最近没学习]]></title>
      <url>http://fredchenjialin.github.io/2015/11/12/%E6%9C%80%E8%BF%91%E6%B2%A1%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>这几天我去参加陕西省研究生创新成果展，看到了很多好玩的东西，也学习到了很多，有了收获，长了见识，认识教训。</p>
<p>所以我没有学习，而且也不太能学的下，不能够静心。</p>
<p>而且，我的手机也是今天也才到我的手上，也算是满足我了我的一个心愿吧，希望诸事安定，可以安心学习了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习5]]></title>
      <url>http://fredchenjialin.github.io/2015/11/01/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A05/</url>
      <content type="html"><![CDATA[<h3 id="第一节里面讲了一个大而全的针对神经网络的cost-Function"><a href="#第一节里面讲了一个大而全的针对神经网络的cost-Function" class="headerlink" title="第一节里面讲了一个大而全的针对神经网络的cost Function"></a>第一节里面讲了一个大而全的针对神经网络的cost Function</h3><p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml5/costfunction.png" alt="costfunction"></p>
<h3 id="Backpropagation-Algorithm"><a href="#Backpropagation-Algorithm" class="headerlink" title="Backpropagation Algorithm"></a>Backpropagation Algorithm</h3><ul>
<li><p>想要求导偏导数是比较困难的。以下是前向传播的算法：<br>  <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml5/Forwardpropagation.png" alt="Forwardpropagation"><br>  可以看出会比较繁琐。</p>
</li>
<li><p>然后这是后向传播<br>  <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml5/backpropagation.png" alt="backpropagation"><br>  <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml5/backpropagationAch.png" alt="backpropagation"></p>
</li>
</ul>
<h3 id="NG说了back的这个也是相当的复杂的，所以，我再说一节给大家感受一下"><a href="#NG说了back的这个也是相当的复杂的，所以，我再说一节给大家感受一下" class="headerlink" title="NG说了back的这个也是相当的复杂的，所以，我再说一节给大家感受一下"></a>NG说了back的这个也是相当的复杂的，所以，我再说一节给大家感受一下</h3><ul>
<li>说到了一个梯度检验算法，用来证明你做的梯度下降是没有错的。</li>
</ul>
<h2 id="程序作业"><a href="#程序作业" class="headerlink" title="程序作业"></a>程序作业</h2><h3 id="第一项-理解多种结果的逻辑回归分类并计算cost-function"><a href="#第一项-理解多种结果的逻辑回归分类并计算cost-function" class="headerlink" title="第一项 理解多种结果的逻辑回归分类并计算cost function"></a>第一项 理解多种结果的逻辑回归分类并计算cost function</h3><h4 id="多种化为传统"><a href="#多种化为传统" class="headerlink" title="多种化为传统"></a>多种化为传统</h4><p>在原来的看法中，以0，1为例，我们将产生这两种结果的cost function定义如下：</p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/2.png" alt="LinearOneVariable"></p>
<p>若是y有多种结果，我们可以假想为，若有n种结果</p>
<ol>
<li>第一个函数计算 （y == x）</li>
<li>第二个函数计算 （y != x）</li>
</ol>
<p>如此实现了从多种到传统的过度。</p>
<h4 id="函数整合"><a href="#函数整合" class="headerlink" title="函数整合"></a>函数整合</h4><p>针对两个函数整合到一起的函数使用的是（y）和（1-y）的小技巧，实现了不是第一个函数就是第二个函数的功能。</p>
<h4 id="举例假设"><a href="#举例假设" class="headerlink" title="举例假设"></a>举例假设</h4><ol>
<li>有5000个样例，10个分类，所以基本的特征函数产生有5000*10的矩阵A</li>
<li>5000个样例有5000个label，针对这些label，处理成为（01）格式,得到5000*10的矩阵B<ul>
<li>例如 y=5 处理为(0,0,0,0,1,0,0,0,0,0)</li>
</ul>
</li>
<li><code>costFunction = -log(A) .<em> B + (-log(1-A)) .</em> (1-B);</code>（注意：这里是点乘）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">costFunction = -log(A) .* B + (-log(<span class="number">1</span>-A)) .* (<span class="number">1</span>-B);</span><br></pre></td></tr></table></figure>
<h3 id="反向传播"><a href="#反向传播" class="headerlink" title="反向传播"></a>反向传播</h3><p>反向传播花了我好长时间，一直想用程序的角度来解决处理矩阵的问题，然后发现多此一举。</p>
<p>原来在反向传播中</p>
<ul>
<li>先做一遍正向的推导</li>
<li>从后向前计算误差值（关键点是：如果不是处理成向量来做，那么每一层的误差据真是不一样的）</li>
<li>计算梯度</li>
<li>正规化</li>
</ul>
<h2 id="我认为即使我做完了这些题目也没有什么好开心的，因为还是学不到最关键的部分，像是为什么反向传播可以求得costFunction-的导数。"><a href="#我认为即使我做完了这些题目也没有什么好开心的，因为还是学不到最关键的部分，像是为什么反向传播可以求得costFunction-的导数。" class="headerlink" title="我认为即使我做完了这些题目也没有什么好开心的，因为还是学不到最关键的部分，像是为什么反向传播可以求得costFunction 的导数。"></a>我认为即使我做完了这些题目也没有什么好开心的，因为还是学不到最关键的部分，像是为什么反向传播可以求得costFunction 的导数。</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习4]]></title>
      <url>http://fredchenjialin.github.io/2015/10/31/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A04/</url>
      <content type="html"><![CDATA[<h3 id="这一期的机器学习讲到了多类分类器和神经网络的铺垫"><a href="#这一期的机器学习讲到了多类分类器和神经网络的铺垫" class="headerlink" title="这一期的机器学习讲到了多类分类器和神经网络的铺垫"></a>这一期的机器学习讲到了多类分类器和神经网络的铺垫</h3><p>在原来的两类分类中，我们只是用不是0就是1来分类，现在的n多类分类可以同理为不是x就是其他n-1种，最后对n中的特征的可能性取最大值即可。</p>
<p>公式可以参考两类分类中的公式，仅仅略有不同。</p>
<p>关于神经网络没有过多涉及，在下一讲中会有更多的体现吧。</p>
<p>仅仅说到了三层中，第一层是输入，第三层是输出，中间的层都是隐藏层，每一层由前一层推出，这叫做前向传导，据说后面还有后向传导。</p>
<p>没什么好说的，挺简单的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器人运动学0]]></title>
      <url>http://fredchenjialin.github.io/2015/10/31/%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%BF%90%E5%8A%A8%E5%AD%A60/</url>
      <content type="html"><![CDATA[<h2 id="最近要写与机器人的步态有关的论文，所以记录一下这一块的学习。"><a href="#最近要写与机器人的步态有关的论文，所以记录一下这一块的学习。" class="headerlink" title="最近要写与机器人的步态有关的论文，所以记录一下这一块的学习。"></a>最近要写与机器人的步态有关的论文，所以记录一下这一块的学习。</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2015年10月30日周报暨计划调整]]></title>
      <url>http://fredchenjialin.github.io/2015/10/31/2015%E5%B9%B410%E6%9C%8830%E6%97%A5%E5%91%A8%E6%8A%A5%E6%9A%A8%E8%AE%A1%E5%88%92%E8%B0%83%E6%95%B4/</url>
      <content type="html"><![CDATA[<p>关于最近的一些想法，一直以来都想做一个自己撸的网站，前端加上后台。在反复浅尝辄止了多个框架，语言后，我发现我离最初的想法差的有点远了。</p>
<p>最初我就是想玩玩效果（注：html5），整一整在网站上看着舒服而又高大上的网页（注：css），如果还有各种各种的动画就更好了（注：JS）。</p>
<p>所以这么久了，一直没搞清自己在寻找着什么，所以我决定是搞css和js，更加偏重js，结合着算法来搞应该会比较有趣。</p>
<p>那么现在的事情总结起来就是：</p>
<ul>
<li>机器学习</li>
<li>步态算法</li>
<li>JS+CSS</li>
<li>ROS</li>
<li>Linux视频+摄像头+图像</li>
</ul>
<h2 id="另外我还发现一点有一个轻量级的blog框架写东西，或者说是用一个好用的工具写技术日记真的要比写技术博客方便好多"><a href="#另外我还发现一点有一个轻量级的blog框架写东西，或者说是用一个好用的工具写技术日记真的要比写技术博客方便好多" class="headerlink" title="另外我还发现一点有一个轻量级的blog框架写东西，或者说是用一个好用的工具写技术日记真的要比写技术博客方便好多"></a>另外我还发现一点有一个轻量级的blog框架写东西，或者说是用一个好用的工具写技术日记真的要比写技术博客方便好多</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习3]]></title>
      <url>http://fredchenjialin.github.io/2015/10/21/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A03/</url>
      <content type="html"><![CDATA[<h2 id="Logistic-Regression"><a href="#Logistic-Regression" class="headerlink" title="Logistic Regression"></a>Logistic Regression</h2><h4 id="特征方程"><a href="#特征方程" class="headerlink" title="特征方程"></a>特征方程</h4><p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/1.png" alt="LinearOneVariable"></p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/CodeCogsEqn.gif" alt="CodeCogsEqn"></p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/logisticCostF.png" alt="logisticCostF"></p>
<h4 id="Cost-Function"><a href="#Cost-Function" class="headerlink" title="Cost Function"></a>Cost Function</h4><p>若是延用原来的Cost Function，在梯度下降的时候会局限于很多的局部最优解，对全局最优解的寻找产生影响。</p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/2.png" alt="LinearOneVariable"></p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/3.png" alt="LinearOneVariable"></p>
<h4 id="求导吧"><a href="#求导吧" class="headerlink" title="求导吧"></a>求导吧</h4><p>首先，用个小技巧把两个情况合二为一。</p>
<p>得到如下：<br><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/4.png" alt="LinearOneVariable"></p>
<h4 id="正规化"><a href="#正规化" class="headerlink" title="正规化"></a>正规化</h4><ul>
<li>逻辑回归正规化公式<br>  <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/regularizeRL.png" alt="regularizeRL"></li>
<li>梯度下降正规化公式<br>  <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml3/regularizeGR.png" alt="regularizeGR"></li>
</ul>
<h3 id="相关矩阵小技巧"><a href="#相关矩阵小技巧" class="headerlink" title="相关矩阵小技巧"></a>相关矩阵小技巧</h3><p>如果我想要把两个矩阵的对应项相乘，那么是不是只有循环了，但是若是我们考虑一下最终的形式，多数情况下，我们不仅要相乘还有相加，所以不用循环。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[小记]]></title>
      <url>http://fredchenjialin.github.io/2015/10/15/%E5%B0%8F%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h4 id="最近研究生的生涯逐渐迈向正轨，然而我自己的生活和心态还基本没有达到我想要达到的状态。"><a href="#最近研究生的生涯逐渐迈向正轨，然而我自己的生活和心态还基本没有达到我想要达到的状态。" class="headerlink" title="最近研究生的生涯逐渐迈向正轨，然而我自己的生活和心态还基本没有达到我想要达到的状态。"></a>最近研究生的生涯逐渐迈向正轨，然而我自己的生活和心态还基本没有达到我想要达到的状态。</h4><pre><code>先是列一下事项：
事项---动作---优先级---目标---关键
</code></pre><ol>
<li>论文———白天研读———重中之重———看下十篇论文后可以有思想去尝试写论文———看框架，流程，和论文写什么</li>
<li>英语六级———白天复习———重要———不低于425分———做真题，练听力</li>
<li>ML———晚上回宿舍在线观看———必做———12月份拿到证书———坚持</li>
<li>论文记载网站———平时研究或周末研究———一般———一个输入显示的网页———go语言</li>
<li>WordPress主题———在平时累了或者周末研究前端———一般—-写一个自己用的极简主义的theme———坚持和找威仔讨论</li>
<li>研究生创新成果展———大概筹划———一般———展出别出岔子———每人做什么事情盯紧就好</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习2]]></title>
      <url>http://fredchenjialin.github.io/2015/10/12/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A02/</url>
      <content type="html"><![CDATA[<h4 id="本周开始讲了多变量的参数学习。"><a href="#本周开始讲了多变量的参数学习。" class="headerlink" title="本周开始讲了多变量的参数学习。"></a>本周开始讲了多变量的参数学习。</h4><pre><code>不过我认为，这个东西也就和单变量一个样子。都是对cost function取最小值，最后得到趋向于稳定的参数。
</code></pre><h3 id="特征缩放-Feature-Scaling"><a href="#特征缩放-Feature-Scaling" class="headerlink" title="特征缩放 Feature Scaling"></a>特征缩放 Feature Scaling</h3><ol>
<li>让所有的特征都处于相同的数量等级，有助于加快回归</li>
<li>mean scaling ：（特征-平均值）/（最大-最小）</li>
<li>学习速率决定了回归质量</li>
</ol>
<h3 id="标准方程"><a href="#标准方程" class="headerlink" title="标准方程"></a>标准方程</h3><ol>
<li>梯度下降和标准方程的比较（在特征规模上的差别）</li>
</ol>
<h4 id="一些题目"><a href="#一些题目" class="headerlink" title="一些题目"></a>一些题目</h4><h4 id="week2-1"><a href="#week2-1" class="headerlink" title="week2-1"></a>week2-1</h4><h4 id="week2-2"><a href="#week2-2" class="headerlink" title="week2-2"></a>week2-2</h4><pre><code>2^6=64
1~=2 %不等于
1&amp;&amp;0 %与
xor(1,0) %异或
PS1(&#39;&gt;&gt; &#39;); %新起一行
pi %圆周率
disp() %显示
分号 换行
ones(x,y) %x行y列 全1
rand(x,y) %      任意
hist %线图
eye %单位矩阵
size(矩阵,1或者2) %1是 row 2 is col
size(矩阵) %vector with 2 var
length(matrix) %longest length
pwd %working path
load filename Equal load(&#39;filename&#39;)
who show the all var
whos show details of who
save filename var encode
: mean every element along that row/col
[A B] row combine
[A ; B] col combine
A .^ 2 each element of A ^2
sum(A) sum of A
prod(A) product of A
floor(A) 
ceil(A) 
</code></pre><p>PS:特征缩放那一题是帮助了更快迭代回归，而不是使每一步都更小花费</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hi]]></title>
      <url>http://fredchenjialin.github.io/2015/10/07/hi/</url>
      <content type="html"><![CDATA[<p>今天看了会线性代数，感觉自己还可以看的下去。</p>
<p>对比我的课本和mit的线性代数的课程内容，我发现了一些顺序上面的不同。</p>
<p>mit的课程是先说方程，说消元，说矩阵，我的大学课本是先说行列式，说秩，说运算</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习1]]></title>
      <url>http://fredchenjialin.github.io/2015/10/05/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A01/</url>
      <content type="html"><![CDATA[<ol>
<li><p>Introduction</p>
<ul>
<li><p>What is Machine Learning?</p>
<p>Two definitions of Machine Learning are offered.<br>Arthur Samuel described it as:<br>“the field of study that gives computers the ability to learn without being explicitly programmed.” This is an older, informal definition.<br>Tom Mitchell provides a more modern definition:<br>“A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.”</p>
<p>Example: playing checkers.<br>E = the experience of playing many games of checkers(玩的经验)<br>T = the task of playing checkers.(要做的事情)<br>P = the probability that the program will win the next game.(事情做成的机率)</p>
</li>
<li><p>Supervised Learning</p>
<p>In supervised learning, we are given a data set and already know what our correct output should look like, having the idea that there is a relationship between the input and the output.</p>
<p>Supervised learning problems are categorized into “regression” and “classification” problems. In a regression problem, we are trying to predict results within a continuous output, meaning that we are trying to map input variables to some continuous function. In a classification problem, we are instead trying to predict results in a discrete output. In other words, we are trying to map input variables into discrete categories.</p>
<p>Example:</p>
<p>Given data about the size of houses on the real estate market, try to predict their price. Price as a function of size is a continuous output, so this is a regression problem.</p>
<p>We could turn this example into a classification problem by instead making our output about whether the house “sells for more or less than the asking price.” Here we are classifying the houses based on price into two discrete categories.</p>
</li>
<li><p>Unsupervised Learning</p>
<p>Unsupervised learning, on the other hand, allows us to approach problems with little or no idea what our results should look like. We can derive structure from data where we don’t necessarily know the effect of the variables.</p>
<p>We can derive this structure by clustering the data based on relationships among the variables in the data.</p>
<p>With unsupervised learning there is no feedback based on the prediction results, i.e., there is no teacher to correct you. It’s not just about clustering. For example, associative memory is unsupervised learning.</p>
<p>Example:</p>
<p>Clustering: Take a collection of 1000 essays written on the US Economy, and find a way to automatically group these essays into a small number that are somehow similar or related by different variables, such as word frequency, sentence length, page count, and so on.</p>
<p>Associative: Suppose a doctor over years of experience forms associations in his mind between patient characteristics and illnesses that they have. If a new patient shows up then based on this patient’s characteristics such as symptoms, family medical history, physical attributes, mental outlook, etc the doctor associates possible illness or illnesses based on what the doctor has seen before with similar patients. This is not the same as rule based reasoning as in expert systems. In this case we would like to estimate a mapping function from patient characteristics into illnesses.</p>
</li>
</ul>
</li>
<li><p>一元线性回归</p>
<h3 id="最为主要的一些公式"><a href="#最为主要的一些公式" class="headerlink" title="最为主要的一些公式"></a>最为主要的一些公式</h3><h5 id="一元线性函数"><a href="#一元线性函数" class="headerlink" title="一元线性函数"></a>一元线性函数</h5><p> <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/LinearOneVariable.png" alt="LinearOneVariable"></p>
<h5 id="花费函数，也就是用来逼近我们需要的俩个参数的函数"><a href="#花费函数，也就是用来逼近我们需要的俩个参数的函数" class="headerlink" title="花费函数，也就是用来逼近我们需要的俩个参数的函数"></a>花费函数，也就是用来逼近我们需要的俩个参数的函数</h5><p> <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/CostFunction.png" alt="CostFunction"></p>
<h5 id="目的函数，所以对他求导"><a href="#目的函数，所以对他求导" class="headerlink" title="目的函数，所以对他求导"></a>目的函数，所以对他求导</h5><p> <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/GoalFunction.png" alt="GoalFunction"></p>
</li>
<li><p>梯度下降法求解目的函数</p>
<h3 id="从一个猜测的初始值出发，不断的减小目的函数"><a href="#从一个猜测的初始值出发，不断的减小目的函数" class="headerlink" title="从一个猜测的初始值出发，不断的减小目的函数"></a>从一个猜测的初始值出发，不断的减小目的函数</h3><h5 id="梯度下降算法"><a href="#梯度下降算法" class="headerlink" title="梯度下降算法"></a>梯度下降算法</h5><p> <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/gradient_descent.png" alt=""></p>
<h5 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h5><p> <img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/Gredientdescentalgorithm.png" alt=""></p>
</li>
<li><p>第一周顺利结束</p>
<h3 id="感觉还不错，因为原来是看过的，但是还是有一点需要注意的。"><a href="#感觉还不错，因为原来是看过的，但是还是有一点需要注意的。" class="headerlink" title="感觉还不错，因为原来是看过的，但是还是有一点需要注意的。"></a>感觉还不错，因为原来是看过的，但是还是有一点需要注意的。</h3><ol>
<li>梯度下降参数α这个值因为考虑到下降速度的问题还是需要变化的，但是会有不够和过了的问题。</li>
<li><p>还有如下的一些问题：</p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/ml1_ex1.png" alt="答案对"></p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/ml1_ex1_1.png" alt="答案错"></p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/ml1_ex2.png" alt="答案错"></p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-ml1/ml1_ex2_1.png" alt="答案错"></p>
</li>
</ol>
</li>
<li><p>补</p>
<ol>
<li>可以找到一个完全匹配的函数。</li>
<li>即使找到一个完全匹配的函数，但是不可以说是100%预测成功。</li>
</ol>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[第一次海淘Nexus5X——纪实]]></title>
      <url>http://fredchenjialin.github.io/2015/10/02/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%B5%B7%E6%B7%98Nexus5X%E2%80%94%E2%80%94%E7%BA%AA%E5%AE%9E/</url>
      <content type="html"><![CDATA[<h3 id="本人第一次海淘，不具有代表性，仅仅给大家一个参考。"><a href="#本人第一次海淘，不具有代表性，仅仅给大家一个参考。" class="headerlink" title="本人第一次海淘，不具有代表性，仅仅给大家一个参考。"></a>本人第一次海淘，不具有代表性，仅仅给大家一个参考。</h3><h2 id="海淘什么"><a href="#海淘什么" class="headerlink" title="海淘什么"></a>海淘什么</h2><p>作为一个伪谷粉，对谷歌亲儿子简直是流口水。。</p>
<p>在13年的时候，我在淘宝上面买了nexus 4，作为到目前为止nexus系列颜值最高的一台手机，4儿子给了我许许多多的第一次。</p>
<h5 id="第一次用原生系统"><a href="#第一次用原生系统" class="headerlink" title="第一次用原生系统"></a>第一次用原生系统</h5><h5 id="第一次刷机"><a href="#第一次刷机" class="headerlink" title="第一次刷机"></a>第一次刷机</h5><h5 id="第一次用双面玻璃的手机"><a href="#第一次用双面玻璃的手机" class="headerlink" title="第一次用双面玻璃的手机"></a>第一次用双面玻璃的手机</h5><h5 id="第一次对一个手机如此爱护，只让它被摔了三次（两次都碎了，衰！！！！）"><a href="#第一次对一个手机如此爱护，只让它被摔了三次（两次都碎了，衰！！！！）" class="headerlink" title="第一次对一个手机如此爱护，只让它被摔了三次（两次都碎了，衰！！！！）"></a>第一次对一个手机如此爱护，只让它被摔了三次（两次都碎了，衰！！！！）</h5><h5 id="第一次感受到一种信仰的力量"><a href="#第一次感受到一种信仰的力量" class="headerlink" title="第一次感受到一种信仰的力量"></a>第一次感受到一种信仰的力量</h5><p>所以这次nexus5x（应该算是7儿子了）一出，就立刻开始研究海淘。。</p>
<h2 id="为什么是5X，不是6P"><a href="#为什么是5X，不是6P" class="headerlink" title="为什么是5X，不是6P"></a>为什么是5X，不是6P</h2><p>了解的人都知道这一次的发布，一共有两部亲儿子，一个是LG代工的5X（因为LG还代工了4，5，6是MOTO），另一个是华为代工的6P，这也是nexus系列首次由国产手机厂商代工。</p>
<p>但是就我认为，第一由华为打入国内市场或者帮助华为走向国际市场这样的事情是肯定在卖方的考虑范围之内的，有可能，我们入手的nexus就不是一个原生系统的手机了，另外，对华为比较抵触。第二，6P的后盖上有一个大黑条，我觉得不能接受，真是丑。（虽然，5X并不好看到哪里去，长得还有点像小米）</p>
<h2 id="为什么是nexus系列"><a href="#为什么是nexus系列" class="headerlink" title="为什么是nexus系列"></a>为什么是nexus系列</h2><p>因为在安卓机器中，原生系统是最靠近这个系统的体验的了。安卓系统的开源，使得这个系统的机器长相各异，形态各异，在原有的系统上加上了很多厂商的思想。<br>原生很方便，直接说道方便这个点不如说是简洁，我们可以随意刷机，随意掌握到很多系统级别的功能，可以感受到最新的系统所带来的改变；<br>原生很好看，我有些时候，会非常受不了厂商定制UI，甚至是android4.0之前的原生界面我都不太可以接受，在android material design被提出来之后，我觉得颜值提高了不少，心里大为开心；<br>原生很快，没有了厂商定制，快是自然而然的。</p>
<h3 id="话痨模式关闭，下面讲讲海淘"><a href="#话痨模式关闭，下面讲讲海淘" class="headerlink" title="话痨模式关闭，下面讲讲海淘"></a>话痨模式关闭，下面讲讲海淘</h3><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>第一次海淘，相信大家和我一样有很多地方不明白。</p>
<p>海淘就是在境外找一个你“信任”的人帮你买东西，然后把东西寄给你。</p>
<p>这其中的一些关键的点在于：</p>
<ul>
<li>东西哪里都可以买，为什么是境外？<ul>
<li>因为有些东西不在中国卖，或者因为关税问题，卖的特别的贵。</li>
</ul>
</li>
<li>谁值得我们信任？<ul>
<li>如果是找同学帮忙买东西，自然是非常的方便，但是不是国外没有自己的同学或是认识的人嘛。</li>
<li>所以就会去找一下比较负责口碑好的转运公司，这里的信任是比较单方向的，因为你找转运公司，公司肯定是要先收了你的钱才帮你办事情，而且事情砸了，多半是我们自己吃亏倒霉，所以一个靠谱的转运公司非常重要。</li>
</ul>
</li>
<li>买东西我们怎么付钱？<ul>
<li>因为是境外，涉及到了汇率和付款的方式，多半的海淘都是双币信用卡或者全币信用卡，有一个叫做全球付的。</li>
</ul>
</li>
<li>寄东西到中国？<ul>
<li>我们在买东西的时候填的是转运公司的地址，同时把我们在国内的地址发给转运公司就ok了。</li>
</ul>
</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>确定买什么，在哪买</li>
<li>确定一家转运公司</li>
<li>向卖价提供转运公司的地址，想转运公司提供我们的地址</li>
<li>等待发货</li>
<li>向转运公司提交包裹信息寄到国内</li>
<li>等待我们东西</li>
</ol>
<h3 id="目前我处于4这个状态"><a href="#目前我处于4这个状态" class="headerlink" title="目前我处于4这个状态"></a>目前我处于4这个状态</h3><hr>
<p>这两天知道了一件新鲜的事情，就是关于在google官网买东西的时候支付的一些细（keng）节（die）。</p>
<p>我们想买google的手机，那么在下单的时候是一个预定的过程，可能google为了防止有人预定了不买和有人乱预定，所以就把预定和发货整成了两个步骤。<br>一是预订的时候用信用卡额度来交钱，但是这个钱仅仅是被冻结了而已，并不会从你的信用卡中扣走，二是在发货的时候，才会把钱扣走。</p>
<p>了解的同学都知道，我是用全球付付款的，全球付是有一个即时到账的一个特性吧，所以，我在预定的时候，钱就已经被扣走了，那么，用虚拟信用卡买东西就是要交两倍的钱，但是最终会不会退回一份的钱还是一个未知数，静待变数~~</p>
<p>希望一切顺利！！</p>
<hr>
<h3 id="我又回来了，带来了好消息"><a href="#我又回来了，带来了好消息" class="headerlink" title="我又回来了，带来了好消息"></a>我又回来了，带来了好消息</h3><p>在20号那天我接到一封google store的email，满怀欣喜的以为是发货了，原来我被砍单了！！！！！！！！！！！！！！<br><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-nexus/kandan.png" alt="砍单"></p>
<p>我的这个心里满满都是悲伤，于是我去哭了一晚上顺便把我的邮寄地址的名字和账户地址的名字改成了一样的又下了一次单（而且颜色还改成了骚骚的ice）</p>
<p>谁知道！！</p>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/ML-nexus/success.png" alt="砍单"></p>
<p>这是无心插柳柳成荫啊！！！本来我都要放弃了！！！</p>
<p>so，赶紧去转运网站报备，填资料什么的。</p>
<p>接下来就是考虑壳和贴膜的事情了。</p>
<hr>
<h3 id="卧槽，我的手机终于到了"><a href="#卧槽，我的手机终于到了" class="headerlink" title="卧槽，我的手机终于到了"></a>卧槽，我的手机终于到了</h3><p>今天11月12号，我的手机历时一个多月终于到手了，非常开心。</p>
<p>更新一下历程：</p>
<ul>
<li>10月02日 反复下单，最终成功一单，买的黑色的</li>
<li>10月20日 通知我被砍单，我立即又下了一单，买的是冰晶蓝色</li>
<li>10月22日 通知我发货了，o(<em>￣▽￣</em>)ブ</li>
<li>10月25日 到达海外仓库，我用的是转运四方</li>
<li>10月29日 发到洛杉矶后从洛杉矶的仓库出发</li>
<li>10月30日 到达新加坡</li>
<li>11月02日 离开新加坡，开始发往北京</li>
<li>11月04日 到达北京</li>
<li>11月05日 开始发往西安</li>
<li>11月11日 到达西安</li>
<li>11月12日 到手</li>
</ul>
<p>持续更新~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[machineLearning开课了！！]]></title>
      <url>http://fredchenjialin.github.io/2015/10/02/machineLearning%E5%BC%80%E8%AF%BE%E4%BA%86%EF%BC%81%EF%BC%81/</url>
      <content type="html"><![CDATA[<p>今天有两件开心的事情，第一件事情是成功购买了nexus5x，第二件事情是突然就发现机器学习开课了，好开心。</p>
<p>上一次，是在大二下的时候，因为要开始准备去哈尔滨的机器人比赛和电子设计竞赛，所以学了有1/5就放弃了。</p>
<p>现在我有时间，又有精力，简直爽翻，我觉得，我肯定可以坚持下去，希望可以在12月27号拿到满分证书。</p>
<p>我崇拜的威神在上上一次的开课时就已经拿到了证书，感觉信心又充足了一些！！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nomoney]]></title>
      <url>http://fredchenjialin.github.io/2015/09/30/nomoney/</url>
      <content type="html"><![CDATA[<ul>
<li>有关符号表 - 已跳</li>
<li>感觉这个可以放弃了。。</li>
</ul>
<hr>
<h3 id="Semaphores-信号量"><a href="#Semaphores-信号量" class="headerlink" title="Semaphores 信号量"></a>Semaphores 信号量</h3><h3 id="Locks-锁"><a href="#Locks-锁" class="headerlink" title="Locks 锁"></a>Locks 锁</h3><h3 id="Monitors-信号量-锁-状态"><a href="#Monitors-信号量-锁-状态" class="headerlink" title="Monitors 信号量 + 锁 + 状态"></a>Monitors 信号量 + 锁 + 状态</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[前缀中缀后缀语法制导翻译]]></title>
      <url>http://fredchenjialin.github.io/2015/09/26/%E5%89%8D%E7%BC%80%E4%B8%AD%E7%BC%80%E5%90%8E%E7%BC%80%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%BF%BB%E8%AF%91/</url>
      <content type="html"><![CDATA[<p>其实我表示没有看懂，就是把要转化的形式在适当的位置上加上print。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2015年9月25日周报2]]></title>
      <url>http://fredchenjialin.github.io/2015/09/25/2015%E5%B9%B49%E6%9C%8825%E6%97%A5%E5%91%A8%E6%8A%A52/</url>
      <content type="html"><![CDATA[<h3 id="本周："><a href="#本周：" class="headerlink" title="本周："></a>本周：</h3><ul>
<li>关于保研的事情算是告一段落了，面试完的那天下午看书心都是落下去的。</li>
<li>附录还在看，感觉后面的说明书的意味更浓</li>
<li>看了编译原理，感觉不错。看到谈谈Parser还有怎样看王垠的《谈谈Parser》？，感觉厉害的人的想法很多呀！</li>
</ul>
<h3 id="下周："><a href="#下周：" class="headerlink" title="下周："></a>下周：</h3><ul>
<li>感觉还是看编译原理更乐意，所以还是看编译原理，不过如果看烦了，我就还可以看操作系统和论文o(<em>￣▽￣</em>)ブ。</li>
</ul>
<ol>
<li>每天吃完饭后悔带上耳机面无表情的看一会《The Lord of the Rings》，老吴挺喜欢看的一部巨制，不过我get不到。</li>
<li>《小森林》看完了（201509251844），非常喜欢，一部关于选择和面对的电影，每一部的中间季节的专场都会有一个主角骑自行车回家的长镜头，从摄像机的跟随到岔路口的镜头自然拉远，每一次看都想流泪，主角做出了她的选择，有一种隐隐的宿命论，但是都是想要好好的活下去。</li>
<li>这星期还发生了一件让我匪夷所思的事情，我只是单纯的想着，但还是忍不住察觉出了一些不对劲的滋味，这个世界就是这样，我无数次对自己说：有因必有果！Damn it</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[yi]]></title>
      <url>http://fredchenjialin.github.io/2015/09/24/yi/</url>
      <content type="html"><![CDATA[<p>09 蘇える巨神兵</p>
<h3 id="简单的一遍编译器"><a href="#简单的一遍编译器" class="headerlink" title="简单的一遍编译器"></a>简单的一遍编译器</h3><ul>
<li>程序设计语言的定义<ul>
<li>语法 上下文无关/BNF范式    </li>
<li>语义 非形式化方法/启发性实例</li>
</ul>
</li>
</ul>
<h4 id="上下文无关"><a href="#上下文无关" class="headerlink" title="上下文无关"></a>上下文无关</h4><ul>
<li>stmt -&gt; if(expr) stmt else stmt<ul>
<li>终结符集合</li>
<li>非终结符集合</li>
<li>产生式集合</li>
<li>特殊的终结符 - 开始符号</li>
</ul>
</li>
</ul>
<h4 id="Exercise2-2"><a href="#Exercise2-2" class="headerlink" title="Exercise2.2"></a>Exercise2.2</h4><h5 id="2-2-1"><a href="#2-2-1" class="headerlink" title="2.2.1"></a>2.2.1</h5><p>S -&gt; SS+|SS*|a</p>
<ol>
<li>a是S，所以aa+是一个S，所以aa+a*是一个S </li>
<li><img src="http://7nj2kj.com1.z0.glb.clouddn.com/e2.2.1.png" alt=""></li>
<li>仅仅带有加减的后缀表达式</li>
</ol>
<h5 id="2-2-2"><a href="#2-2-2" class="headerlink" title="2.2.2"></a>2.2.2</h5><ul>
<li>a) S -&gt; 0S1 | 01<ul>
<li>前面n个0，后面n个1，n&gt;=1</li>
</ul>
</li>
<li>b) S -&gt; +SS | -SS | a<ul>
<li>仅仅带有加减的前缀表达式</li>
</ul>
</li>
<li>c) S -&gt; S(S)S| null<ul>
<li>匹配任意范围和递归层数的括号</li>
</ul>
</li>
<li>d) S -&gt; aSbS | bSaS | null<ul>
<li>拥有相同数量的a和b</li>
</ul>
</li>
<li>e) S -&gt; a | S+S | SS | S* |(S)<ul>
<li>？</li>
</ul>
</li>
</ul>
<h5 id="2-2-4"><a href="#2-2-4" class="headerlink" title="2.2.4"></a>2.2.4</h5><ul>
<li>1.Arithmetic expressions in postfix notation.<ul>
<li>E -&gt; E E operation | num</li>
</ul>
</li>
<li>2.Left-associative lists of identifiers separated by commas.<ul>
<li>list -&gt; list , id | id</li>
</ul>
</li>
<li>3.Right-associative lists of identifiers separated by commas.<ul>
<li>list -&gt; id , list | id</li>
</ul>
</li>
<li>4.Arithmetic expressions of integers and identifiers with the four binary operators +, -, *, /.<ul>
<li>d -&gt; d+g | d-g | g</li>
<li>g -&gt; base*g | base/g | base</li>
<li>base -&gt; id | num | *</li>
</ul>
</li>
<li>5.Add unary plus and minus to the arithmetic operators of 4.<ul>
<li>d -&gt; d+g | d-g | g</li>
<li>g -&gt; g*tmp| g/tmp | tmp</li>
<li>tmp -&gt; +base | -base | base</li>
<li>base -&gt; id | num | *</li>
</ul>
</li>
</ul>
<h5 id="2-2-5"><a href="#2-2-5" class="headerlink" title="2.2.5"></a>2.2.5</h5><ul>
<li>num -&gt; 11 | 1001 | num0 | num num<ul>
<li>证明以此构成的二进制数是可以被3整除的</li>
</ul>
</li>
</ul>
<p>sum<br>= Σ<sub>n</sub> (2<sup>1</sup> + 2<sup>0</sup>) * 2<sup>n</sup> + Σ<sub>m</sub> (2<sup>3</sup> + 2<sup>2</sup>) * 2<sup>m</sup><br>= Σ<sub>n</sub> 3 * 2 <sup>n</sup> + Σ<sub>m</sub> 9 * 2<sup>m</sup></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[yi]]></title>
      <url>http://fredchenjialin.github.io/2015/09/23/yi/</url>
      <content type="html"><![CDATA[<h3 id="编译原理"><a href="#编译原理" class="headerlink" title="编译原理"></a>编译原理</h3><ul>
<li>词法分析 - 分词</li>
<li>层次分析 &amp; 语法分析 要求递归</li>
<li>语义分析 - 检测，收集，类型检查</li>
</ul>
<p><img src="http://7nj2kj.com1.z0.glb.clouddn.com/statement_Complier.jpg" alt="编译器的各个阶段"></p>
<ul>
<li>符号表管理</li>
<li>发现错误继续运行 - 发现所有的错误</li>
<li>代码生成 - 变量的寄存器分配</li>
</ul>
<h4 id="预处理器"><a href="#预处理器" class="headerlink" title="预处理器"></a>预处理器</h4><ul>
<li>宏处理</li>
<li>文件包含</li>
<li>“理性”预处理器</li>
<li>语言扩充</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[小计]]></title>
      <url>http://fredchenjialin.github.io/2015/09/22/%E5%B0%8F%E8%AE%A1/</url>
      <content type="html"><![CDATA[<p>今天查到一个命令netstat -ano，可以在win下查看本机的端口占用情况<br>还要给马老板盯着坚果。</p>
<p>根本不用我关心坚果，jd上面就有卖的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[复试口语]]></title>
      <url>http://fredchenjialin.github.io/2015/09/21/%E5%A4%8D%E8%AF%95%E5%8F%A3%E8%AF%AD/</url>
      <content type="html"><![CDATA[<h2 id="About-self-introduction"><a href="#About-self-introduction" class="headerlink" title="About self-introduction"></a>About self-introduction</h2><p>Dear Professors, my name is ChenJiaLin, 20 years old.<br>I come from HuaiBei city, Anhui province. In the year of 2012, I entered Northwestern Polytechnical University<br>majoring in Software Engineering. </p>
<p>日了狗了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pintos学习笔记2]]></title>
      <url>http://fredchenjialin.github.io/2015/09/20/pintos%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</url>
      <content type="html"><![CDATA[<p>今天看了《捉妖记》，真心的不好看，不过里面的汤唯还是挺好看的。<br>另外今天机试。<br>已经下了《指环王》和《蝙蝠侠》准备看，感觉都是恢弘巨制，IMDB上面都是排名很高。</p>
<p>关于电影这个事情，我就想做一个看电影的记录网站。o(<em>￣▽￣</em>)ブ</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pintos学习笔记1]]></title>
      <url>http://fredchenjialin.github.io/2015/09/16/pintos%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      <content type="html"><![CDATA[<p>今天我看了《煎饼侠》和《小森林》夏秋的前面一点点。<br>《煎饼侠》找了挺多人，挺不可思议的，看过一个人写过大鹏。</p>
<p>很喜欢《小森林》的感觉，像一个梦.</p>
<h2 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h2><h3 id="struct-thread"><a href="#struct-thread" class="headerlink" title="struct thread"></a>struct thread</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> kB +---------------------------------+</span><br><span class="line">     |          kernel stack           |</span><br><span class="line">     |                |                |</span><br><span class="line">     |                |                |</span><br><span class="line">     |                V                |</span><br><span class="line">     |         grows downward          |</span><br><span class="line">     |                                 |</span><br><span class="line">     |                                 |</span><br><span class="line">     |                                 |</span><br><span class="line">     |                                 |</span><br><span class="line">     |                                 |</span><br><span class="line">     |                                 |</span><br><span class="line">     |                                 |</span><br><span class="line">     |                                 |</span><br><span class="line">     +---------------------------------+</span><br><span class="line">     |              magic              |</span><br><span class="line">     |                :                |</span><br><span class="line">     |                :                |</span><br><span class="line">     |               name              |</span><br><span class="line">     |              status             |</span><br><span class="line">     |               tid               |</span><br><span class="line"><span class="number">0</span> kB +---------------------------------+</span><br></pre></td></tr></table></figure>
<h4 id="tid"><a href="#tid" class="headerlink" title="tid"></a>tid</h4><p>线程标识符<br>tid_t，int类型<br>从1开始，为了初始化进程</p>
<h4 id="status"><a href="#status" class="headerlink" title="status"></a>status</h4><ul>
<li>THREAD_RUNNING<ul>
<li>thread_ current()返回进行中的线程</li>
</ul>
</li>
<li>THREAD_READY<ul>
<li>doubly LinkedList</li>
</ul>
</li>
<li>THREAD_BLOCKED<ul>
<li>调用thread_unblock()进入THREAD_READY</li>
</ul>
</li>
<li>THREAD_DYING</li>
</ul>
<h4 id="name"><a href="#name" class="headerlink" title="name"></a>name</h4><p>name</p>
<h4 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h4><ul>
<li>uint8_t *</li>
<li>when the CPU switches to another thread,this member saves the thread’s stack pointer</li>
<li>When an interrupt occurs, whether in the kernel or a user program, an struct intr_ frame is pushed onto the stack</li>
</ul>
<h4 id="int-priority"><a href="#int-priority" class="headerlink" title="int priority"></a>int priority</h4><ul>
<li>ranging from PRI_MIN (0) to PRI_MAX (63).</li>
</ul>
<h4 id="struct-list-elem-allelem"><a href="#struct-list-elem-allelem" class="headerlink" title="struct list_elem allelem"></a>struct list_elem allelem</h4><ul>
<li>link the thread into the list of all threads</li>
</ul>
<h4 id="struct-list-elem-elem"><a href="#struct-list-elem-elem" class="headerlink" title="struct list_elem elem"></a>struct list_elem elem</h4><ul>
<li>put the thread into doubly linked lists, either ready<em>list (the list of threads ready to run) or a list of threads waiting on a semaphore in sema</em> down()</li>
</ul>
<h4 id="uint32-t-pagedir"><a href="#uint32-t-pagedir" class="headerlink" title="uint32_t * pagedir"></a>uint32_t * pagedir</h4><h4 id="unsigned-magic"><a href="#unsigned-magic" class="headerlink" title="unsigned magic"></a>unsigned magic</h4><ul>
<li>detect stack overﬂow</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pintos学习笔记1]]></title>
      <url>http://fredchenjialin.github.io/2015/09/15/pintos%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      <content type="html"><![CDATA[<p>1，实现一个哈希函数<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HASH_SIZE 哈希参数</span></span><br><span class="line">hashcode(<span class="string">"abcd"</span>) = (ascii(a) * <span class="number">333</span> + ascii(b) * <span class="number">332</span> + ascii(c) *<span class="number">33</span> + ascii(d)) % HASH_SIZE </span><br><span class="line">                 = (<span class="number">97</span>* <span class="number">333</span> + <span class="number">98</span> * <span class="number">332</span> + <span class="number">99</span> * <span class="number">33</span> +<span class="number">100</span>) % HASH_SIZE</span><br><span class="line">                 = <span class="number">3595978</span> % HASH_SIZE</span><br></pre></td></tr></table></figure></p>
<ul>
<li>注意超界——模运算<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//(a+b)%c=(a%c+b%c)%c</span></span><br><span class="line"><span class="comment">//(a*b)%c=(a%c*b%c)%c</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hashCode</span><span class="params">(<span class="built_in">string</span> str,<span class="keyword">int</span> HASH_SIZE)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> leng = str.length();</span><br><span class="line">    <span class="keyword">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> args = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = leng-<span class="number">1</span>;i &gt;= <span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += (str[i]*args%HASH_SIZE);</span><br><span class="line">        args = args*<span class="number">33</span>%HASH_SIZE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum%HASH_SIZE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>2，一个vector的基本用法<br>3，最多的点过直线</p>
<hr>
<p>本来打算今天看thread的，被叫去打撸了。。。。</p>
<p>今天看了《我是路人甲》，没什么感觉。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pintos学习笔记0]]></title>
      <url>http://fredchenjialin.github.io/2015/09/13/pintos%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B00/</url>
      <content type="html"><![CDATA[<p>今天看了一点点的pintos，做了半道网易的运营的<a href="http://multipluso.com/2015/09/wangyi-hiho0/" target="_blank" rel="external">题目</a></p>
<p>打算写一点计划出来：</p>
<ol>
<li>每天三道lintcode上面的题目</li>
<li>要看书（网络）</li>
</ol>
<hr>
<h2 id="Loading"><a href="#Loading" class="headerlink" title="Loading"></a>Loading</h2><h3 id="Loader"><a href="#Loader" class="headerlink" title="Loader"></a>Loader</h3><ul>
<li>BIOS加载Loader（MBR）<ul>
<li>预留64字节给分区表</li>
<li>128字节给内核命令行参数</li>
</ul>
</li>
<li>Loader读分区表找到内核<ul>
<li>找到可启动内核分区</li>
<li>从分区读入内存128kB（或许更多，但是BIOS不提供超过1MB的大小）</li>
<li>找到入口（内核的BLF header有个指针指向入口）</li>
<li>Loader跳去入口</li>
<li>每次运行内核时插入参数</li>
</ul>
</li>
</ul>
<hr>
<h3 id="Low-Level-Kernel-Initialization"><a href="#Low-Level-Kernel-Initialization" class="headerlink" title="Low-Level Kernel Initialization"></a>Low-Level Kernel Initialization</h3><p>入口 start() in threads/start.S</p>
<h4 id="start"><a href="#start" class="headerlink" title="start()"></a>start()</h4><ul>
<li>获取机器的内存</li>
<li>启用A20 line,做64M的内存映射（看不太懂）</li>
<li>call main()</li>
</ul>
<hr>
<h3 id="High-Level-Kernel-Initialization"><a href="#High-Level-Kernel-Initialization" class="headerlink" title="High-Level Kernel Initialization"></a>High-Level Kernel Initialization</h3><h4 id="调用main"><a href="#调用main" class="headerlink" title="调用main()"></a>调用main()</h4><ul>
<li>call bss_init()          - 清理BSS（被清为0的字段的传统名：在函数外未提供初始化的变量声明，variable goes into the BSS？）</li>
<li>call read_command_line() - break the kernel command line into arguments</li>
<li>call parse_options()     - read any options at the beginning of the command line</li>
<li>call thread_init()       - 因为要用锁，所以就初始化</li>
<li>initialize the console and print a startup message to the console</li>
<li>call palloc_init()       - initialize memory system by setting up the <a href="Page Allocator">kernel page allocator</a></li>
<li>call molloc_init()       - sets up the allocator that handles allocations of arbitrary-size <a href="Block Allocator">blocks</a> of memory</li>
<li>call paging_init()       - sets up a <a href="Page Table">page table</a> for the kernel<ul>
<li>在第二节后面还有tss和gdt的初始化</li>
</ul>
</li>
<li>call intr_init()         - sets up the CPU’s interrupt descriptor table (IDT) to ready it for <a href="Interrupt Infrastructure">interrupt handling</a></li>
<li>call timer_init()        - handling timer interrupt</li>
<li>call kbd_init()          - handling keyboard interrupt</li>
<li>call input_init()        - sets up to merge serial and keyboard input into one stream<ul>
<li>在第二节后面还有用户程序的初始化exception_init() and syscall_init().</li>
</ul>
</li>
<li>start the scheduler with thread_start(),call serial_init_queue() to switch to interrupt-driven serial port I/O</li>
<li>call timer_calibrate() </li>
<li>call ide_init() and filesys_init() to initialize the IDE disks and file system<h4 id="Boot-is-complete"><a href="#Boot-is-complete" class="headerlink" title="Boot is complete."></a>Boot is complete.</h4></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo下的第一篇blog]]></title>
      <url>http://fredchenjialin.github.io/2015/09/08/hexo%E4%B8%8B%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/</url>
      <content type="html"><![CDATA[<h2 id="自定义图标的问题"><a href="#自定义图标的问题" class="headerlink" title="自定义图标的问题"></a>自定义图标的问题</h2><p>很多人说将themes/主题名称/layout/_partial/head.ejs中的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link href=<span class="string">"&lt;%- config.root %&gt;favicon.png"</span> rel=<span class="string">"icon"</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>替换为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link href=<span class="string">"&lt;%- config.root %&gt;favicon.ico"</span> rel=<span class="string">"icon"</span> <span class="built_in">type</span>=<span class="string">"image/x-ico"</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>好像在hexo3下无效了，因为找不到类似的语句</p>
<p>我的做法<br>在同样的位置现在的写法是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.favicon)&#123; %&gt;</span><br><span class="line">  &lt;link rel=<span class="string">"icon"</span> href=<span class="string">"&lt;%- theme.favicon %&gt;"</span>&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p>
<p>所以在对应位置放一个favicon.ico的图标就可以了，在主题目录的source文件夹下。</p>
<h2 id="多说评论框设置"><a href="#多说评论框设置" class="headerlink" title="多说评论框设置"></a>多说评论框设置</h2><p>先在_config.yml下添加duoshuo_shortname，在article.ejs中调用</p>
<p>在主题/layout/_partial/article.ejs的最后一段替换如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments &amp;&amp; config.duoshuo_shortname)&#123; %&gt;</span><br><span class="line">  &lt;section id=<span class="string">"comments"</span>&gt;</span><br><span class="line">    &lt;!-- 多说评论框 start --&gt;</span><br><span class="line">    &lt;div class=<span class="string">"ds-thread"</span> data-thread-key=<span class="string">"&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;"</span> data-title=<span class="string">"&lt;%= post.title %&gt;"</span> data-url=<span class="string">"&lt;%= page.permalink %&gt;"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;!-- 多说评论框 end --&gt;</span><br><span class="line">    &lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    var duoshuoQuery = &#123;short_name:<span class="string">'&lt;%= config.duoshuo_shortname %&gt;'</span>&#125;;</span><br><span class="line">      (<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        var ds = document.createElement(<span class="string">'script'</span>);</span><br><span class="line">        ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</span><br><span class="line">        ds.src = (document.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</span><br><span class="line">        ds.charset = <span class="string">'UTF-8'</span>;</span><br><span class="line">        (document.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </span><br><span class="line">         || document.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</span><br><span class="line">      &#125;)();</span><br><span class="line">      &lt;/script&gt;</span><br><span class="line">    &lt;!-- 多说公共JS代码 end --&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="个人页面添加"><a href="#个人页面添加" class="headerlink" title="个人页面添加"></a>个人页面添加</h2><p>在主题/_config.yml中的menu中添加 About: /about</p>
<h2 id="我这个页面的mathjax规则"><a href="#我这个页面的mathjax规则" class="headerlink" title="我这个页面的mathjax规则"></a>我这个页面的mathjax规则</h2><p>在单行模式下，也就是两个美元符号之间，</p>
<ul>
<li>下划线需要转义</li>
<li>大括号是用两个反斜杠转义</li>
</ul>
<p>在插入模式下，也就是四个美元符号之间，</p>
<ul>
<li>可以直接用latex的大括号</li>
<li>下滑线不用转义</li>
<li>包含于符号需要空格</li>
</ul>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <url>http://fredchenjialin.github.io/404.html</url>
      <content type="html"><![CDATA[<p>&lt;!DOCTYPE HTML&gt;</p>
<html><br><head><br>    <meta charset="UTF-8"><br></head><br><body><br><!-- hexo-inject:begin --><!-- hexo-inject:end --><!--
<!DOCTYPE HTML>
<html>
<head>
    <meta charset="UTF-8" />
    <title>公益404 | 不如</title><!-- hexo-inject:begin --><!-- hexo-inject:end -->

<body>
<!-- hexo-inject:begin --><!-- hexo-inject:end -->#404 Not found By Bruce
<h1>404 Page Not Found</h1>
--><br><script type="text/javascript" src="http://www.qq.com/404/search_children.js" charset="utf-8" homepageurl="http://fredchenjialin.github.io/" homepagename="回到我的主页"></script><br><!--
公益404介接入地址
益云公益404 http://yibo.iyiyun.com/Index/web404
腾讯公益404 http://www.qq.com/404
失蹤兒童少年資料管理中心404 http://404page.missingkids.org.tw
--><br><!-- hexo-inject:begin --><!-- hexo-inject:end --></body><br></body></html>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[about]]></title>
      <url>http://fredchenjialin.github.io/about/index.html</url>
      <content type="html"><![CDATA[<p>Multipluso，安徽人，本科西工大。<br>软件工程专业，知道一些计算机常识，写过一点代码，搞过一些应用，上了一些不靠谱的课，水过一次机器人比赛<br>目前是一个写不好算法，整不了数据结构，没做过pintos作业，没看完ML视频，没学过编译原理，没有可以搭建ss的vps全靠<a href="http://jecvay.com" target="_blank" rel="external">jecvay</a>支援翻墙的没有脱离低级趣味的人。</p>
<p>想法就是把上面没做到的赶紧做了，然后在研究生生涯里可以做做项目，搞搞机器视觉和自主决策，然后找个好下家，热爱生活，么么哒！！！</p>
<p><a href="http://weibo.com/fredchenjialin" target="_blank" rel="external">微博</a><br><a href="https://github.com/fredchenjialin" target="_blank" rel="external">github</a><br><a href="http://www.multipluso.com/" target="_blank" rel="external">主站</a><br>邮箱: fredchenjialin#gmail</p>
<h2 id="关于mathjax的问题-2016-10-17"><a href="#关于mathjax的问题-2016-10-17" class="headerlink" title="关于mathjax的问题 2016.10.17"></a>关于mathjax的问题 2016.10.17</h2><p>mathjax和marked有冲突，导致了很多什么下划线，星号都变成了<em></em>，所以有问题。。。</p>
]]></content>
    </entry>
    
  
</search>
